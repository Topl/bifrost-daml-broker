"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(r),m=o,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9881:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Getting Started",l={unversionedId:"intro",id:"intro",title:"Getting Started",description:"Let's discover bifrost-daml-broker in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/bifrost-daml-broker/docs/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Using with DAML Hub",permalink:"/bifrost-daml-broker/docs/damlhub"}},s={},u=[{value:"Development Usage",id:"development-usage",level:2},{value:"System Requirements",id:"system-requirements",level:3},{value:"Broker Requirements",id:"broker-requirements",level:3},{value:"Initializing the DAML Ledger",id:"initializing-the-daml-ledger",level:3},{value:"Launch the Prerequirements",id:"launch-the-prerequirements",level:3},{value:"Launch the broker",id:"launch-the-broker",level:3}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"Let's discover ",(0,o.kt)("strong",{parentName:"p"},"bifrost-daml-broker in less than 5 minutes"),"."),(0,o.kt)("h2",{id:"development-usage"},"Development Usage"),(0,o.kt)("p",null,"If you are using the bifrost-daml-broker for development purposes in conjunction with the DAML toolset,\nfor example, the ",(0,o.kt)("inlineCode",{parentName:"p"},"daml sandbox")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"daml start")," command please refer to this section."),(0,o.kt)("h3",{id:"system-requirements"},"System Requirements"),(0,o.kt)("p",null,"Your system needs to have the following software installed."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Java Virtual Machine (JVM).- The bifrost-daml-broker is a Java application, and thus Java is needed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://get-coursier.io/docs/cli-installation"},"Coursier"),".- A simple command line tool (CLI) to\nto run Java applications without any setup. It is very easy to install."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.daml.com/getting-started/installation.html"},"DAML SDK"),".- We need the DAML SDK to integrate with DAML"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.docker.com/products/docker-desktop/"},"Docker"),".- We are using Docker to launch the Bifrost node easily. ")),(0,o.kt)("h3",{id:"broker-requirements"},"Broker Requirements"),(0,o.kt)("p",null,"To launch the broker you need to provide it with a ",(0,o.kt)("inlineCode",{parentName:"p"},"keyfile.json")," file and the password for that file."),(0,o.kt)("h3",{id:"initializing-the-daml-ledger"},"Initializing the DAML Ledger"),(0,o.kt)("p",null,"Before launching the broker you need to initialize the DAML ledger. For this, your ledger initialization script\nneeds to allocate a party for the broker. The broker will use this party to interact with the ledger."),(0,o.kt)("p",null,"This can be done by adding the following line to your DAML initialization script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-daml"},'import Daml.Script\nimport DA.Optional\n\ninitialize : Script [Party]\ninitialize = do\n    broker <- allocateParty "broker"\n    brokerId <- validateUserId "broker"\n    createUser (Daml.Script.User brokerId (Some broker)) [CanActAs broker]\n    debug ("broker party: " <> partyToText broker)\n    pure []\n')),(0,o.kt)("p",null,"The debug statement will print the party allocated for the broker. You will need this party to launch the broker."),(0,o.kt)("h3",{id:"launch-the-prerequirements"},"Launch the Prerequirements"),(0,o.kt)("p",null,"You need to launch the DAML sandbox from your DAML project using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"daml start\n")),(0,o.kt)("p",null,"You also need to launch a Bifrost node using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 9085:9085 toplprotocol/bifrost-node:1.10.2 --forge --disableAuth --seed test --debug\n")),(0,o.kt)("h3",{id:"launch-the-broker"},"Launch the broker"),(0,o.kt)("p",null,"Assuming your ",(0,o.kt)("inlineCode",{parentName:"p"},"keyfile.json")," in the current directory and its password is ",(0,o.kt)("inlineCode",{parentName:"p"},"test")," you can launch the broker using the following command (this uses coursier to launch it):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cs launch co.topl:bifrost-daml-broker_2.13:0.2.0 --  -n private -u http://127.0.0.1:9085 -h localhost -p 6865 -s false -o <broker party> -k keyfile.json -w test\n")))}c.isMDXComponent=!0}}]);