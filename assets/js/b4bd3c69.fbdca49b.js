"use strict";(self.webpackChunkmicrosite=self.webpackChunkmicrosite||[]).push([[118],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8753:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},i="Using with DAML Hub",l={unversionedId:"damlhub",id:"damlhub",title:"Using with DAML Hub",description:"DamlHub is a cloud-based DAML development environment. It provides a DAML sandbox and a DAML ledger as a service. The broker can be used with DamlHub to connect to the Topl network.",source:"@site/docs/damlhub.md",sourceDirName:".",slug:"/damlhub",permalink:"/bifrost-daml-broker/docs/damlhub",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/bifrost-daml-broker/docs/intro"},next:{title:"Reference",permalink:"/bifrost-daml-broker/docs/category/reference"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Launch the broker",id:"launch-the-broker",level:3}],c={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-with-daml-hub"},"Using with DAML Hub"),(0,o.kt)("p",null,"DamlHub is a cloud-based DAML development environment. It provides a DAML sandbox and a DAML ledger as a service. The broker can be used with DamlHub to connect to the Topl network."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You need to have your application contracts, triggers and UI deployed on a ledger on DamlHub. To launch the broker we will need the ledger ID which we refer to as ",(0,o.kt)("inlineCode",{parentName:"li"},"<ledger id>"),"."),(0,o.kt)("li",{parentName:"ul"},"You need to have the ledger host on DamlHub. This is usually the ledger ID followed by ",(0,o.kt)("inlineCode",{parentName:"li"},".daml.app"),"."),(0,o.kt)("li",{parentName:"ul"},"You need to create a Service User and use the login WS to obtain its access token (see ",(0,o.kt)("a",{parentName:"li",href:"https://hub.daml.com/docs/api/#operation/saLogin"},"DamlHub documentation")," for more details). To launch the broker we need this token, which we refer to as ",(0,o.kt)("inlineCode",{parentName:"li"},"<access token>"),"."),(0,o.kt)("li",{parentName:"ul"},"You need to extract the party for the UserAdmin party from DAML Hub UI. To launch the broker we need this party, which we refer to as ",(0,o.kt)("inlineCode",{parentName:"li"},"<user admin party>"),"."),(0,o.kt)("li",{parentName:"ul"},"For this documentation we assume that you are running your bifrost node locally on port 9085. To use another network, the parameters need to be adapted accordingly."),(0,o.kt)("li",{parentName:"ul"},"DAML Hub is secured using TLS, thus we need to enable the TLS flag when launching the broker ",(0,o.kt)("inlineCode",{parentName:"li"},"-s true"),".")),(0,o.kt)("h3",{id:"launch-the-broker"},"Launch the broker"),(0,o.kt)("p",null,"Assuming your ",(0,o.kt)("inlineCode",{parentName:"p"},"keyfile.json")," in the current directory and its password is ",(0,o.kt)("inlineCode",{parentName:"p"},"test")," you can launch the broker using the following command (this uses coursier to launch it):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'cs launch co.topl:bifrost-daml-broker_2.13:0.2.0 --  -n private -u http://127.0.0.1:9085 -h <ledger id>.daml.app -p 443 -s true -t "<access token>" -o "<user admin party>" -k keyfile.json -w test\n')))}d.isMDXComponent=!0}}]);